#!/usr/bin/env perl

use strict;
use warnings;
use feature qw(say);

use constant DICT => '/tmp/wordsetc.jsonl';

eval "use JSON::XS qw(encode_json decode_json)";
if ($@) {
  warn "This script requires the JSON::XS module.\n";
  warn "You can install it by running:\n";

  if (system("which cpanm >/dev/null") == 0) {
    warn "  cpanm JSON::XS\n";
  } else {
    warn "  cpan JSON::XS\n";
  }

  exit 1;
}

unless (-f DICT) {
  warn "The dictionary file is missing. You can create it by running:\n\n\twordsetc rebuild\n";
  exit 1;
}

my %words = map{ uc $_ => 1 } @ARGV;

my $keys = join '|',
  map{ join '', sort split //, uc $_ }
  keys %words;

my $re_keys = qr/^(?:$keys):/;

open my $in, '<', DICT
  or die "Can't open " . DICT . ": $!";

while (defined(my $line = <$in>)) {
  chomp $line;

  next unless $line =~ /$re_keys/;

  my ($json_str) = $line =~ /^[^:]*?:(.*)$/;
  my $json = decode_json($json_str);
  next unless $words{$json->{term}};

  print "$json_str\n";
}
